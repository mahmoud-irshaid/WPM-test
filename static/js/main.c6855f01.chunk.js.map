{"version":3,"sources":["wordBankContext.js","App.js","reportWebVitals.js","index.js","sw.js"],"names":["WordContext","createContext","WordProvider","props","useState","wordsFile","words","length","Provider","value","children","Scores","lazy","About","Home","App","basename","process","fallback","class","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","navigator","window","addEventListener","serviceWorker","register","registration","console","log","scope","event","preventDefault","button","querySelector","removeAttribute","prompt","setAttribute","err","catch"],"mappings":"+MAEaA,EAAcC,0BAEdC,EAAe,SAACC,GAAW,IAAD,EACTC,mBAASC,EAAUC,OADV,mBAC5BA,EAD4B,UAEnC,OACI,mCACIA,EAAMC,QACN,cAACP,EAAYQ,SAAb,CAAsBC,MAAO,CAACH,SAA9B,SACKH,EAAMO,e,+nWCRjBC,EAASC,gBAAK,kBAAM,gCACpBC,EAAQD,gBAAK,kBAAM,gCACnBE,EAAOF,gBAAK,kBAAM,gCAoBTG,MAjBf,WAEE,OACE,mCACA,cAAC,IAAD,CAAQC,SAAQ,UAAKC,YAAL,KAAhB,SACE,cAAC,WAAD,CAAUC,SAAU,qBAAKC,MAAM,cAA/B,SACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,UAAUC,UAAWV,IACjC,cAAC,IAAD,CAAOS,KAAK,SAASC,UAAWR,IAChC,cAAC,IAAD,CAAOO,KAAK,IAAIC,UAAWP,cCJpBQ,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,QCCdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACA,cAAC,EAAD,QAGFC,SAASC,eAAe,SCZlB,kBAAmBC,UACnBC,OAAOC,iBAAiB,QAAQ,WAC5BF,UAAUG,cAAcC,SAAS,qBAAqBf,MAAK,SAAUgB,GACjEC,QAAQC,IAAI,iCAAkCF,EAAaG,OAG3DP,OAAOC,iBAAiB,uBAAuB,SAAAO,GAC3CA,EAAMC,iBACN,IAAIC,EAASb,SAASc,cAAc,UACpCD,EAAOE,gBAAgB,UACvBF,EAAOT,iBAAiB,SAAS,WAC/BO,EAAMK,SACNH,EAAOI,aAAa,YAAY,YAIvC,SAAUC,GACTV,QAAQC,IAAI,6BAA8BS,MAC3CC,OAAM,SAAUD,GACfV,QAAQC,IAAIS,SAIpBV,QAAQC,IAAI,+CDNpBrB,M","file":"static/js/main.c6855f01.chunk.js","sourcesContent":["import React, { useState, createContext } from 'react'\r\nimport wordsFile from './words.json'\r\nexport const WordContext = createContext()\r\n\r\nexport const WordProvider = (props) => {\r\n    const [words, setwords] = useState(wordsFile.words)\r\n    return (\r\n        <>\r\n        {   words.length &&\r\n            <WordContext.Provider value={{words}}>\r\n                {props.children}\r\n            </WordContext.Provider>\r\n        }\r\n        </>\r\n    );\r\n}","import { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\nimport React,{lazy,Suspense} from 'react';\nconst Scores = lazy(() => import('./components/scores'));\nconst About = lazy(() => import('./components/about'));\nconst Home = lazy(() => import('./components/Home'));\n\n\nfunction App() {\n  \n  return (\n    <>\n    <Router basename={`${process.env.PUBLIC_URL}/`}>\n      <Suspense fallback={<div class=\"spinner-4\"></div>}>\n      <Switch>\n        <Route path='/scores' component={Scores} />\n        <Route path='/about' component={About} />\n        <Route path='/' component={Home} />\n      </Switch>\n      </Suspense>\n    </Router>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {WordProvider} from './wordBankContext';\n\nimport LocalServiceWorkerRegister from './sw'\n\nReactDOM.render(\n  <React.StrictMode>\n    <WordProvider>\n    <App />\n    </WordProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nLocalServiceWorkerRegister()\n\nreportWebVitals();\n","export default function LocalServiceWorkerRegister() {\r\n\r\n    if ('serviceWorker' in navigator) {\r\n        window.addEventListener('load', function () {\r\n            navigator.serviceWorker.register('/serviceWorker.js').then(function (registration) {\r\n                console.log('Worker registration successful', registration.scope);\r\n\r\n\r\n                window.addEventListener('beforeinstallprompt', event => {\r\n                    event.preventDefault();\r\n                    var button = document.querySelector('button');\r\n                    button.removeAttribute('hidden');\r\n                    button.addEventListener('click', () => {\r\n                      event.prompt();\r\n                      button.setAttribute('disabled', true);\r\n                    });\r\n                  });\r\n\r\n            }, function (err) {\r\n                console.log('Worker registration failed', err);\r\n            }).catch(function (err) {\r\n                console.log(err);\r\n            });\r\n        });\r\n    } else {\r\n        console.log('Service Worker is not supported by browser.');\r\n    }\r\n}"],"sourceRoot":""}